# Cargo deny configuration for dependency security
# https://embarkstudios.github.io/cargo-deny/

[graph]
targets = [
    { triple = "x86_64-unknown-linux-gnu" },
    { triple = "x86_64-unknown-linux-musl" },
    { triple = "x86_64-apple-darwin" },
    { triple = "aarch64-apple-darwin" },
]

[advisories]
# The path where the advisory database is cloned/fetched into
db-path = "~/.cargo/advisory-db"
# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]
# The lint level for security vulnerabilities
vulnerability = "deny"
# The lint level for unmaintained crates
unmaintained = "warn"
# The lint level for crates that have been yanked from their source registry
yanked = "warn"
# The lint level for crates with security notices. Note that as of
# 2019-12-17 there are no security notice advisories in
# https://github.com/rustsec/advisory-db
notice = "warn"
# A list of advisory IDs to ignore. Note that ignored advisories will still
# output a note when they are encountered.
ignore = [
    # Ignore advisories for dependencies we've verified are safe in our context
    # Add any specific advisories here if needed after review
]
# Threshold for security vulnerabilities, any vulnerability with a CVSS score
# lower than this value will be ignored. 0.0 means all vulnerabilities will be reported.
severity-threshold = 0.0

[licenses]
# The confidence threshold for detecting a license from a license text.
# 0.8 means we need to be 80% confident that the detected license is correct
confidence-threshold = 0.8
# List of explicitly allowed licenses
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
    "CC0-1.0",
]
# List of explicitly disallowed licenses
deny = [
    "GPL-2.0",
    "GPL-3.0",
    "AGPL-1.0",
    "AGPL-3.0",
    "LGPL-2.0",
    "LGPL-2.1",
    "LGPL-3.0",
    "MPL-2.0",
]
# Lint level for when multiple versions of the same license are detected
copyleft = "warn"
# Blanket approval or denial for OSI-approved or FSF Free/Libre licenses
allow-osi-fsf-free = "both"
# Lint level used when no license is detected
default = "deny"

[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "warn"
# Lint level for when a crate version requirement is `*`
wildcards = "allow"
# The graph highlighting used when creating dotgraphs for crates
# with multiple versions (if multiple-versions is specified)
highlight = "all"
# List of crates that are allowed. Use with care!
allow = []
# List of crates to deny
deny = [
    # Crates with known security issues
    { name = "openssl", version = "*" },  # Use rustls instead
    { name = "native-tls", version = "*" },  # Use rustls-tls instead
    # Crates that might introduce timing attacks
    { name = "ring", version = "<0.16" },
    # Deprecated or unmaintained crates
    { name = "chrono", version = "<0.4.22" },  # Has timezone vulnerabilities
    { name = "time", version = "<0.3.0" },    # Has security issues
    # Crates that might cause supply chain issues
    { name = "suspicious-crate", version = "*" },  # Example placeholder
]
# Lint level for crates that do not have a version specified
skip = []
# Similarly to `skip` allows you to skip certain crates from being checked. Unlike `skip`,
# `skip-tree` skips the crate and all of its dependencies entirely.
skip-tree = []

[sources]
# Lint level for what to happen when a crate from a crate registry that is
# not in the allow list is encountered
unknown-registry = "warn"
# Lint level for what to happen when a crate from a git repository that is not
# in the allow list is encountered
unknown-git = "warn"
# List of URLs for allowed crate registries. Defaults to the crates.io index
# if not specified. If it is specified but empty, no registries are allowed.
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
# List of URLs for allowed Git repositories
allow-git = []