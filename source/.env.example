# =============================================================================
# KALISI SINGLE COMPREHENSIVE CONFIGURATION - SECURITY HARDENED
# =============================================================================
# Copy this file to .env and update with your values

# Security Keys (MUST BE CHANGED!)
JWT_SECRET=your_jwt_secret_here_64_chars_minimum
ENCRYPTION_KEY=your_encryption_key_here_64_chars_hex
NEO4J_PASSWORD=your_neo4j_password_here
RESEND_API_KEY=re_your_resend_api_key_here

# Test Configuration
TEST_USER_EMAIL=your_test_email@example.com

# Environment
ENVIRONMENT=production
RUST_LOG=warn
NODE_ENV=development

# Build Configuration
DOCKER_COMPOSE_FILE=docker-compose.yml
DOCKER_PROJECT_NAME=kalisi
RUST_BINARY_PATH=target/release/kalisi-gateway
AGENT_RUNTIME_BIN=target/release/agent-runtime-service
FRONTEND_BUILD_DIR=frontend/dist
FRONTEND_RUNTIME_OUTPUT=runtime/frontend/dist

# Rust Compilation Optimizations
CARGO_BUILD_JOBS=8
RUSTC_WRAPPER=sccache
CARGO_TARGET_DIR=target

# Server
PORT=3000
BIND_ADDRESS=0.0.0.0  # This allows external connections
BASE_URL=https://yourdomain.com:8443  # Production domain with HTTPS on port 8443

# HTTPS Configuration
ENABLE_HTTPS=true
HTTPS_PORT=443

# Network Security
# For production/local development: use "127.0.0.1:8080:8080" (localhost only)
# For GitHub Codespaces: use "8080:8080" (all interfaces)
# SECURITY WARNING: Never use "0.0.0.0" binding in production!
DOCKER_PORT_BINDING=127.0.0.1:3000:3000
DOCKER_HTTPS_PORT_BINDING=443:443
HTTPS_REDIRECT_PORT=8443
NEO4J_HTTP_PORT=7474
REDIS_PORT=6379

# Database - Redis (PRIMARY STORAGE) - Native Installation
REDIS_URL=redis://localhost:6379

# Database - Neo4j (GRAPH DATA) - Native Installation
NEO4J_URI=bolt://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_DATABASE=neo4j

# Real-Time Graph Delta Support (Experimental)
# Enables real-time graph change detection and WebSocket streaming of deltas
# Requires: Redis Stream support, Neo4j timestamp indexes (see scripts/neo4j/add_timestamp_support.cypher)
ENABLE_GRAPH_DELTA=false

# Email Service (DISABLED - Using TOTP-only authentication)
RESEND_FROM_EMAIL="Kalisi System <your_email@domain.com>"
RESEND_FROM_NAME="Kalisi System"
EMAIL_OTP_ENABLED=false

# Multi-Factor Authentication (TOTP-only mode)
MFA_REQUIRED=true
MFA_ISSUER="Kalisi Development System"
TOTP_ONLY_MODE=true

# Approved Users
APPROVED_EMAILS=your_email@example.com,another_email@example.com

# Test Result Notifications
TEST_RESULTS_EMAIL=your_email@example.com

# Test Configuration
TEST_PASSWORD=your_secure_test_password
TEST_USER_EMAIL=your_test_email@example.com
FIELD_ENCRYPTION_KEY=your_base64_encoded_field_encryption_key

# Test Database URLs (use main config as fallback)
TEST_DATABASE_URL=redis://localhost:6379
TEST_NEO4J_URI=bolt://localhost:7687
TEST_NEO4J_USER=neo4j
TEST_NEO4J_PASSWORD=your_neo4j_password_here
TEST_PORT=3000

# Development Settings
DEBUG_MODE=false
DEV_OTP_DISPLAY=false
DEV_MODE=false  # Enable frontend live reload and development features
CLEAR_OLD_MESSAGES_ON_STARTUP=true  # Clear old Redis messages on agent startup

# Claude API Configuration
CLAUDE_API_KEY=sk-ant-api03-your_claude_api_key_here
CLAUDE_API_URL=https://api.anthropic.com/v1/messages
CLAUDE_MODEL=claude-3-5-sonnet-20241022
CLAUDE_MAX_TOKENS=2048

# AI Assistant Configuration
AI_ASSISTANT_NAME=TICO
# Logging Configuration
LOG_RETENTION_DAYS=30
LOG_ROTATION_HOURS=24
LOG_MAX_SIZE_MB=1000
LOG_REDIS_DB=5
ANGULAR_DEV_PROXY=false
